{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gEzLfFLoLTOV"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import pickle\n",
        "import warnings\n",
        "\n",
        "warnings.filterwarnings(\"ignore\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv(\"/content/sample_data/NHIS_Vision_and_Eye_Health_Surveillance_20240501.csv\")\n",
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "_9rWJ5g9MWkD",
        "outputId": "6d99cbcc-a825-4958-c708-2312e4998edb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       YearStart  YearEnd LocationAbbr LocationDesc DataSource  \\\n",
              "0           2016     2017           US     National       NHIS   \n",
              "1           2016     2017           US     National       NHIS   \n",
              "2           2016     2017           US     National       NHIS   \n",
              "3           2016     2017           US     National       NHIS   \n",
              "4           2016     2017           US     National       NHIS   \n",
              "...          ...      ...          ...          ...        ...   \n",
              "71644       2016     2017           US     National       NHIS   \n",
              "71645       2016     2017           US     National       NHIS   \n",
              "71646       2016     2017           US     National       NHIS   \n",
              "71647       2016     2017           US     National       NHIS   \n",
              "71648       2016     2017           US     National       NHIS   \n",
              "\n",
              "                     Topic          Category  \\\n",
              "0      Service Utilization  Cataract Surgery   \n",
              "1      Service Utilization  Cataract Surgery   \n",
              "2      Service Utilization    Eye Protection   \n",
              "3      Service Utilization    Eye Protection   \n",
              "4      Service Utilization    Eye Protection   \n",
              "...                    ...               ...   \n",
              "71644      Visual Function      Visual Field   \n",
              "71645      Visual Function      Visual Field   \n",
              "71646      Visual Function      Visual Field   \n",
              "71647      Visual Function      Visual Field   \n",
              "71648      Visual Function      Visual Field   \n",
              "\n",
              "                                                Question  \\\n",
              "0      Percentage of people with diagnosed cataract w...   \n",
              "1      Percentage of people with diagnosed cataract w...   \n",
              "2      Proportion of adults who participate in activi...   \n",
              "3      Proportion of adults who participate in activi...   \n",
              "4      Proportion of adults who participate in activi...   \n",
              "...                                                  ...   \n",
              "71644  Percentage of adults who even when wearing gla...   \n",
              "71645  Percentage of adults who even when wearing gla...   \n",
              "71646  Percentage of adults who even when wearing gla...   \n",
              "71647  Percentage of adults who even when wearing gla...   \n",
              "71648  Percentage of adults who even when wearing gla...   \n",
              "\n",
              "                   Response                 Age  ... QuestionID ResponseID  \\\n",
              "0                       Yes         65-84 years  ...      QCATS       RYES   \n",
              "1                       Yes  85 years and older  ...      QCATS       RYES   \n",
              "2                   Refused         40-64 years  ...     ISPROT        RRF   \n",
              "3                Don't Know         40-64 years  ...     ISPROT        RDK   \n",
              "4          Some of the time         18-39 years  ...     ISPROT      RSOMT   \n",
              "...                     ...                 ...  ...        ...        ...   \n",
              "71644               Refused         40-64 years  ...      ISNS2        RRF   \n",
              "71645    Somewhat difficult  18 years and older  ...      ISNS2       RSWD   \n",
              "71646  Not at all difficult         18-39 years  ...      ISNS2      RNOTD   \n",
              "71647  Not at all difficult         18-39 years  ...      ISNS2      RNOTD   \n",
              "71648        Very difficult         18-39 years  ...      ISNS2        RVD   \n",
              "\n",
              "      DataValueTypeID      AgeID GenderID RaceEthnicityID  RiskFactorID  \\\n",
              "0                 NaN    AGE6584       GF             ASN          RFDM   \n",
              "1                 NaN  AGE85PLUS       GM             OTH          RFDM   \n",
              "2                 NaN    AGE4064     GALL             OTH          RFDM   \n",
              "3                 NaN    AGE4064       GM         ALLRACE          RFDM   \n",
              "4                 NaN    AGE1839       GM             ASN          RFDM   \n",
              "...               ...        ...      ...             ...           ...   \n",
              "71644             NaN    AGE4064     GALL             ASN        RFAPAR   \n",
              "71645             NaN  AGE18PLUS       GF         ALLRACE        RFAPAR   \n",
              "71646             NaN    AGE1839       GF         ALLRACE          RFSM   \n",
              "71647             NaN    AGE1839       GF            HISP          RFDM   \n",
              "71648             NaN    AGE1839       GF             BLK          RFDM   \n",
              "\n",
              "      RiskFactorResponseID GeoLocation  Geographic Level  \n",
              "0                     RFBD         NaN               NaN  \n",
              "1                     RFNO         NaN               NaN  \n",
              "2                    RFYES         NaN               NaN  \n",
              "3                    RFYES         NaN               NaN  \n",
              "4                     RFNO         NaN               NaN  \n",
              "...                    ...         ...               ...  \n",
              "71644                RFTOT         NaN               NaN  \n",
              "71645                RFTOT         NaN               NaN  \n",
              "71646               RFFORM         NaN               NaN  \n",
              "71647                RFYES         NaN               NaN  \n",
              "71648                 RFNO         NaN               NaN  \n",
              "\n",
              "[71649 rows x 36 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-791a1b1e-68e5-43f7-93aa-5a81351e1eeb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearStart</th>\n",
              "      <th>YearEnd</th>\n",
              "      <th>LocationAbbr</th>\n",
              "      <th>LocationDesc</th>\n",
              "      <th>DataSource</th>\n",
              "      <th>Topic</th>\n",
              "      <th>Category</th>\n",
              "      <th>Question</th>\n",
              "      <th>Response</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>QuestionID</th>\n",
              "      <th>ResponseID</th>\n",
              "      <th>DataValueTypeID</th>\n",
              "      <th>AgeID</th>\n",
              "      <th>GenderID</th>\n",
              "      <th>RaceEthnicityID</th>\n",
              "      <th>RiskFactorID</th>\n",
              "      <th>RiskFactorResponseID</th>\n",
              "      <th>GeoLocation</th>\n",
              "      <th>Geographic Level</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Cataract Surgery</td>\n",
              "      <td>Percentage of people with diagnosed cataract w...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>65-84 years</td>\n",
              "      <td>...</td>\n",
              "      <td>QCATS</td>\n",
              "      <td>RYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE6584</td>\n",
              "      <td>GF</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFBD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Cataract Surgery</td>\n",
              "      <td>Percentage of people with diagnosed cataract w...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>85 years and older</td>\n",
              "      <td>...</td>\n",
              "      <td>QCATS</td>\n",
              "      <td>RYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE85PLUS</td>\n",
              "      <td>GM</td>\n",
              "      <td>OTH</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Refused</td>\n",
              "      <td>40-64 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RRF</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE4064</td>\n",
              "      <td>GALL</td>\n",
              "      <td>OTH</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Don't Know</td>\n",
              "      <td>40-64 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RDK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE4064</td>\n",
              "      <td>GM</td>\n",
              "      <td>ALLRACE</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Some of the time</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RSOMT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GM</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71644</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Refused</td>\n",
              "      <td>40-64 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RRF</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE4064</td>\n",
              "      <td>GALL</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFAPAR</td>\n",
              "      <td>RFTOT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71645</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Somewhat difficult</td>\n",
              "      <td>18 years and older</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RSWD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE18PLUS</td>\n",
              "      <td>GF</td>\n",
              "      <td>ALLRACE</td>\n",
              "      <td>RFAPAR</td>\n",
              "      <td>RFTOT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71646</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Not at all difficult</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RNOTD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GF</td>\n",
              "      <td>ALLRACE</td>\n",
              "      <td>RFSM</td>\n",
              "      <td>RFFORM</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71647</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Not at all difficult</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RNOTD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GF</td>\n",
              "      <td>HISP</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71648</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Very difficult</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RVD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GF</td>\n",
              "      <td>BLK</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>71649 rows × 36 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-791a1b1e-68e5-43f7-93aa-5a81351e1eeb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-791a1b1e-68e5-43f7-93aa-5a81351e1eeb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-791a1b1e-68e5-43f7-93aa-5a81351e1eeb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c6946c98-3ddb-4fd6-846c-e1ef8f7e538c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6946c98-3ddb-4fd6-846c-e1ef8f7e538c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c6946c98-3ddb-4fd6-846c-e1ef8f7e538c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_464844de-6912-4b39-a26e-675c6874145e\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_464844de-6912-4b39-a26e-675c6874145e button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(type(data))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jwlNKfjMNGtM",
        "outputId": "6cb6c3db-2d30-4d67-adf3-96a51750b08c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YlgK5d6pNOhm",
        "outputId": "8898bf0e-3e5f-4e8e-89ee-0d0fa05f03b6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(71649, 36)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "OxZMW0vYNTEP",
        "outputId": "a26ddc1d-62e9-4f1c-e67f-02477a32dc77"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   YearStart  YearEnd LocationAbbr LocationDesc DataSource  \\\n",
              "0       2016     2017           US     National       NHIS   \n",
              "1       2016     2017           US     National       NHIS   \n",
              "2       2016     2017           US     National       NHIS   \n",
              "3       2016     2017           US     National       NHIS   \n",
              "4       2016     2017           US     National       NHIS   \n",
              "5       2016     2017           US     National       NHIS   \n",
              "6       2016     2017           US     National       NHIS   \n",
              "7       2016     2017           US     National       NHIS   \n",
              "8       2016     2017           US     National       NHIS   \n",
              "9       2016     2017           US     National       NHIS   \n",
              "\n",
              "                 Topic                    Category  \\\n",
              "0  Service Utilization            Cataract Surgery   \n",
              "1  Service Utilization            Cataract Surgery   \n",
              "2  Service Utilization              Eye Protection   \n",
              "3  Service Utilization              Eye Protection   \n",
              "4  Service Utilization              Eye Protection   \n",
              "5  Service Utilization              Eye Protection   \n",
              "6  Service Utilization              Eye Protection   \n",
              "7      Visual Function  Blind or Difficulty Seeing   \n",
              "8      Visual Function  Blind or Difficulty Seeing   \n",
              "9      Visual Function  Difficulty Finding Objects   \n",
              "\n",
              "                                            Question          Response  \\\n",
              "0  Percentage of people with diagnosed cataract w...               Yes   \n",
              "1  Percentage of people with diagnosed cataract w...               Yes   \n",
              "2  Proportion of adults who participate in activi...           Refused   \n",
              "3  Proportion of adults who participate in activi...        Don't Know   \n",
              "4  Proportion of adults who participate in activi...  Some of the time   \n",
              "5  Proportion of adults who participate in activi...            Always   \n",
              "6  Proportion of adults who participate in activi...            Always   \n",
              "7  Percentage of adults who are blind or unable t...               Yes   \n",
              "8  Percentage of adults who are blind or unable t...               Yes   \n",
              "9  Percentage of adults who even when wearing gla...           Refused   \n",
              "\n",
              "                  Age  ... QuestionID ResponseID DataValueTypeID      AgeID  \\\n",
              "0         65-84 years  ...      QCATS       RYES             NaN    AGE6584   \n",
              "1  85 years and older  ...      QCATS       RYES             NaN  AGE85PLUS   \n",
              "2         40-64 years  ...     ISPROT        RRF             NaN    AGE4064   \n",
              "3         40-64 years  ...     ISPROT        RDK             NaN    AGE4064   \n",
              "4         18-39 years  ...     ISPROT      RSOMT             NaN    AGE1839   \n",
              "5         18-39 years  ...     ISPROT       RALW             NaN    AGE1839   \n",
              "6  18 years and older  ...     ISPROT       RALW             NaN  AGE18PLUS   \n",
              "7         18-39 years  ...      ISBLA       RYES             NaN    AGE1839   \n",
              "8  85 years and older  ...      ISBLA       RYES             NaN  AGE85PLUS   \n",
              "9  18 years and older  ...      ISFS5        RRF             NaN  AGE18PLUS   \n",
              "\n",
              "  GenderID RaceEthnicityID  RiskFactorID RiskFactorResponseID GeoLocation  \\\n",
              "0       GF             ASN          RFDM                 RFBD         NaN   \n",
              "1       GM             OTH          RFDM                 RFNO         NaN   \n",
              "2     GALL             OTH          RFDM                RFYES         NaN   \n",
              "3       GM         ALLRACE          RFDM                RFYES         NaN   \n",
              "4       GM             ASN          RFDM                 RFNO         NaN   \n",
              "5       GM             ASN          RFDM                 RFNO         NaN   \n",
              "6       GM             ASN          RFDM                 RFNO         NaN   \n",
              "7       GF             ASN          RFHT                 RFNO         NaN   \n",
              "8       GF         ALLRACE          RFHT                RFYES         NaN   \n",
              "9       GF             BLK          RFDM                 RFNO         NaN   \n",
              "\n",
              "   Geographic Level  \n",
              "0               NaN  \n",
              "1               NaN  \n",
              "2               NaN  \n",
              "3               NaN  \n",
              "4               NaN  \n",
              "5               NaN  \n",
              "6               NaN  \n",
              "7               NaN  \n",
              "8               NaN  \n",
              "9               NaN  \n",
              "\n",
              "[10 rows x 36 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-29c097cd-20f7-4fbf-9e95-1ca1f97c8f5a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearStart</th>\n",
              "      <th>YearEnd</th>\n",
              "      <th>LocationAbbr</th>\n",
              "      <th>LocationDesc</th>\n",
              "      <th>DataSource</th>\n",
              "      <th>Topic</th>\n",
              "      <th>Category</th>\n",
              "      <th>Question</th>\n",
              "      <th>Response</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>QuestionID</th>\n",
              "      <th>ResponseID</th>\n",
              "      <th>DataValueTypeID</th>\n",
              "      <th>AgeID</th>\n",
              "      <th>GenderID</th>\n",
              "      <th>RaceEthnicityID</th>\n",
              "      <th>RiskFactorID</th>\n",
              "      <th>RiskFactorResponseID</th>\n",
              "      <th>GeoLocation</th>\n",
              "      <th>Geographic Level</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Cataract Surgery</td>\n",
              "      <td>Percentage of people with diagnosed cataract w...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>65-84 years</td>\n",
              "      <td>...</td>\n",
              "      <td>QCATS</td>\n",
              "      <td>RYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE6584</td>\n",
              "      <td>GF</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFBD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Cataract Surgery</td>\n",
              "      <td>Percentage of people with diagnosed cataract w...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>85 years and older</td>\n",
              "      <td>...</td>\n",
              "      <td>QCATS</td>\n",
              "      <td>RYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE85PLUS</td>\n",
              "      <td>GM</td>\n",
              "      <td>OTH</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Refused</td>\n",
              "      <td>40-64 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RRF</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE4064</td>\n",
              "      <td>GALL</td>\n",
              "      <td>OTH</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Don't Know</td>\n",
              "      <td>40-64 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RDK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE4064</td>\n",
              "      <td>GM</td>\n",
              "      <td>ALLRACE</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Some of the time</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RSOMT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GM</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Always</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RALW</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GM</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Service Utilization</td>\n",
              "      <td>Eye Protection</td>\n",
              "      <td>Proportion of adults who participate in activi...</td>\n",
              "      <td>Always</td>\n",
              "      <td>18 years and older</td>\n",
              "      <td>...</td>\n",
              "      <td>ISPROT</td>\n",
              "      <td>RALW</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE18PLUS</td>\n",
              "      <td>GM</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Blind or Difficulty Seeing</td>\n",
              "      <td>Percentage of adults who are blind or unable t...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISBLA</td>\n",
              "      <td>RYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GF</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFHT</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Blind or Difficulty Seeing</td>\n",
              "      <td>Percentage of adults who are blind or unable t...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>85 years and older</td>\n",
              "      <td>...</td>\n",
              "      <td>ISBLA</td>\n",
              "      <td>RYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE85PLUS</td>\n",
              "      <td>GF</td>\n",
              "      <td>ALLRACE</td>\n",
              "      <td>RFHT</td>\n",
              "      <td>RFYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Difficulty Finding Objects</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Refused</td>\n",
              "      <td>18 years and older</td>\n",
              "      <td>...</td>\n",
              "      <td>ISFS5</td>\n",
              "      <td>RRF</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE18PLUS</td>\n",
              "      <td>GF</td>\n",
              "      <td>BLK</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 36 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29c097cd-20f7-4fbf-9e95-1ca1f97c8f5a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-29c097cd-20f7-4fbf-9e95-1ca1f97c8f5a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-29c097cd-20f7-4fbf-9e95-1ca1f97c8f5a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3ff40237-1043-456c-9ecc-2b9ac7673bd0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3ff40237-1043-456c-9ecc-2b9ac7673bd0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3ff40237-1043-456c-9ecc-2b9ac7673bd0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.tail(6)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 825
        },
        "id": "Dt8YhDvsNa5G",
        "outputId": "a1e011b4-6661-46fb-9bd4-0e94776207ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       YearStart  YearEnd LocationAbbr LocationDesc DataSource  \\\n",
              "71643       2016     2017           US     National       NHIS   \n",
              "71644       2016     2017           US     National       NHIS   \n",
              "71645       2016     2017           US     National       NHIS   \n",
              "71646       2016     2017           US     National       NHIS   \n",
              "71647       2016     2017           US     National       NHIS   \n",
              "71648       2016     2017           US     National       NHIS   \n",
              "\n",
              "                 Topic      Category  \\\n",
              "71643  Visual Function  Visual Field   \n",
              "71644  Visual Function  Visual Field   \n",
              "71645  Visual Function  Visual Field   \n",
              "71646  Visual Function  Visual Field   \n",
              "71647  Visual Function  Visual Field   \n",
              "71648  Visual Function  Visual Field   \n",
              "\n",
              "                                                Question  \\\n",
              "71643  Percentage of adults who even when wearing gla...   \n",
              "71644  Percentage of adults who even when wearing gla...   \n",
              "71645  Percentage of adults who even when wearing gla...   \n",
              "71646  Percentage of adults who even when wearing gla...   \n",
              "71647  Percentage of adults who even when wearing gla...   \n",
              "71648  Percentage of adults who even when wearing gla...   \n",
              "\n",
              "                                        Response                 Age  ...  \\\n",
              "71643  Do not do this activity for other reasons         18-39 years  ...   \n",
              "71644                                    Refused         40-64 years  ...   \n",
              "71645                         Somewhat difficult  18 years and older  ...   \n",
              "71646                       Not at all difficult         18-39 years  ...   \n",
              "71647                       Not at all difficult         18-39 years  ...   \n",
              "71648                             Very difficult         18-39 years  ...   \n",
              "\n",
              "      QuestionID ResponseID DataValueTypeID      AgeID GenderID  \\\n",
              "71643      ISNS2      RDTOR             NaN    AGE1839       GM   \n",
              "71644      ISNS2        RRF             NaN    AGE4064     GALL   \n",
              "71645      ISNS2       RSWD             NaN  AGE18PLUS       GF   \n",
              "71646      ISNS2      RNOTD             NaN    AGE1839       GF   \n",
              "71647      ISNS2      RNOTD             NaN    AGE1839       GF   \n",
              "71648      ISNS2        RVD             NaN    AGE1839       GF   \n",
              "\n",
              "      RaceEthnicityID  RiskFactorID RiskFactorResponseID GeoLocation  \\\n",
              "71643             OTH          RFDM                 RFNO         NaN   \n",
              "71644             ASN        RFAPAR                RFTOT         NaN   \n",
              "71645         ALLRACE        RFAPAR                RFTOT         NaN   \n",
              "71646         ALLRACE          RFSM               RFFORM         NaN   \n",
              "71647            HISP          RFDM                RFYES         NaN   \n",
              "71648             BLK          RFDM                 RFNO         NaN   \n",
              "\n",
              "       Geographic Level  \n",
              "71643               NaN  \n",
              "71644               NaN  \n",
              "71645               NaN  \n",
              "71646               NaN  \n",
              "71647               NaN  \n",
              "71648               NaN  \n",
              "\n",
              "[6 rows x 36 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-111f2bf0-f438-4a73-ad7c-8752d4b800dd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearStart</th>\n",
              "      <th>YearEnd</th>\n",
              "      <th>LocationAbbr</th>\n",
              "      <th>LocationDesc</th>\n",
              "      <th>DataSource</th>\n",
              "      <th>Topic</th>\n",
              "      <th>Category</th>\n",
              "      <th>Question</th>\n",
              "      <th>Response</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>QuestionID</th>\n",
              "      <th>ResponseID</th>\n",
              "      <th>DataValueTypeID</th>\n",
              "      <th>AgeID</th>\n",
              "      <th>GenderID</th>\n",
              "      <th>RaceEthnicityID</th>\n",
              "      <th>RiskFactorID</th>\n",
              "      <th>RiskFactorResponseID</th>\n",
              "      <th>GeoLocation</th>\n",
              "      <th>Geographic Level</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>71643</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Do not do this activity for other reasons</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RDTOR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GM</td>\n",
              "      <td>OTH</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71644</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Refused</td>\n",
              "      <td>40-64 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RRF</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE4064</td>\n",
              "      <td>GALL</td>\n",
              "      <td>ASN</td>\n",
              "      <td>RFAPAR</td>\n",
              "      <td>RFTOT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71645</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Somewhat difficult</td>\n",
              "      <td>18 years and older</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RSWD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE18PLUS</td>\n",
              "      <td>GF</td>\n",
              "      <td>ALLRACE</td>\n",
              "      <td>RFAPAR</td>\n",
              "      <td>RFTOT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71646</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Not at all difficult</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RNOTD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GF</td>\n",
              "      <td>ALLRACE</td>\n",
              "      <td>RFSM</td>\n",
              "      <td>RFFORM</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71647</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Not at all difficult</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RNOTD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GF</td>\n",
              "      <td>HISP</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFYES</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71648</th>\n",
              "      <td>2016</td>\n",
              "      <td>2017</td>\n",
              "      <td>US</td>\n",
              "      <td>National</td>\n",
              "      <td>NHIS</td>\n",
              "      <td>Visual Function</td>\n",
              "      <td>Visual Field</td>\n",
              "      <td>Percentage of adults who even when wearing gla...</td>\n",
              "      <td>Very difficult</td>\n",
              "      <td>18-39 years</td>\n",
              "      <td>...</td>\n",
              "      <td>ISNS2</td>\n",
              "      <td>RVD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>AGE1839</td>\n",
              "      <td>GF</td>\n",
              "      <td>BLK</td>\n",
              "      <td>RFDM</td>\n",
              "      <td>RFNO</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6 rows × 36 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-111f2bf0-f438-4a73-ad7c-8752d4b800dd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-111f2bf0-f438-4a73-ad7c-8752d4b800dd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-111f2bf0-f438-4a73-ad7c-8752d4b800dd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ddbba181-4320-429c-9b64-bbb89143d275\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ddbba181-4320-429c-9b64-bbb89143d275')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ddbba181-4320-429c-9b64-bbb89143d275 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "id": "MaUAH5y6NkyH",
        "outputId": "a02a9820-23ed-4970-b001-e573f0c0f9b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          YearStart       YearEnd    Data_Value  Low_Confidence_Limit  \\\n",
              "count  71649.000000  71649.000000  33154.000000          33154.000000   \n",
              "mean    2015.673910   2016.673910     19.585614             17.347588   \n",
              "std        0.738818      0.738818     30.037798             28.422199   \n",
              "min     2014.000000   2015.000000      0.000000              0.000000   \n",
              "25%     2016.000000   2017.000000      0.500000              0.140000   \n",
              "50%     2016.000000   2017.000000      3.200000              2.180000   \n",
              "75%     2016.000000   2017.000000     22.087500             16.700000   \n",
              "max     2016.000000   2017.000000    100.000000             98.570000   \n",
              "\n",
              "       High_Confidence_Limit  Numerator   Sample_Size  LocationID  \\\n",
              "count           33154.000000        0.0  53859.000000     71649.0   \n",
              "mean               22.136642        NaN   2463.380401        59.0   \n",
              "std                31.424559        NaN   5538.926770         0.0   \n",
              "min                 0.000000        NaN     30.000000        59.0   \n",
              "25%                 1.310000        NaN    130.000000        59.0   \n",
              "50%                 4.930000        NaN    477.000000        59.0   \n",
              "75%                28.940000        NaN   2008.000000        59.0   \n",
              "max               100.000000        NaN  70332.000000        59.0   \n",
              "\n",
              "       DataValueTypeID  GeoLocation  Geographic Level  \n",
              "count              0.0          0.0               0.0  \n",
              "mean               NaN          NaN               NaN  \n",
              "std                NaN          NaN               NaN  \n",
              "min                NaN          NaN               NaN  \n",
              "25%                NaN          NaN               NaN  \n",
              "50%                NaN          NaN               NaN  \n",
              "75%                NaN          NaN               NaN  \n",
              "max                NaN          NaN               NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-43c0dbb4-998e-4e7f-aebb-b38f78870c52\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearStart</th>\n",
              "      <th>YearEnd</th>\n",
              "      <th>Data_Value</th>\n",
              "      <th>Low_Confidence_Limit</th>\n",
              "      <th>High_Confidence_Limit</th>\n",
              "      <th>Numerator</th>\n",
              "      <th>Sample_Size</th>\n",
              "      <th>LocationID</th>\n",
              "      <th>DataValueTypeID</th>\n",
              "      <th>GeoLocation</th>\n",
              "      <th>Geographic Level</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>71649.000000</td>\n",
              "      <td>71649.000000</td>\n",
              "      <td>33154.000000</td>\n",
              "      <td>33154.000000</td>\n",
              "      <td>33154.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>53859.000000</td>\n",
              "      <td>71649.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2015.673910</td>\n",
              "      <td>2016.673910</td>\n",
              "      <td>19.585614</td>\n",
              "      <td>17.347588</td>\n",
              "      <td>22.136642</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2463.380401</td>\n",
              "      <td>59.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.738818</td>\n",
              "      <td>0.738818</td>\n",
              "      <td>30.037798</td>\n",
              "      <td>28.422199</td>\n",
              "      <td>31.424559</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5538.926770</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2014.000000</td>\n",
              "      <td>2015.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>59.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2016.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0.140000</td>\n",
              "      <td>1.310000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>130.000000</td>\n",
              "      <td>59.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2016.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>3.200000</td>\n",
              "      <td>2.180000</td>\n",
              "      <td>4.930000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>477.000000</td>\n",
              "      <td>59.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2016.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>22.087500</td>\n",
              "      <td>16.700000</td>\n",
              "      <td>28.940000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2008.000000</td>\n",
              "      <td>59.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2016.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>98.570000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>70332.000000</td>\n",
              "      <td>59.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43c0dbb4-998e-4e7f-aebb-b38f78870c52')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-43c0dbb4-998e-4e7f-aebb-b38f78870c52 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-43c0dbb4-998e-4e7f-aebb-b38f78870c52');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-41e82440-9a0c-4cab-b1ca-9cb8546a380f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41e82440-9a0c-4cab-b1ca-9cb8546a380f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-41e82440-9a0c-4cab-b1ca-9cb8546a380f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"YearStart\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24730.93917091596,\n        \"min\": 0.7388183191830495,\n        \"max\": 71649.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2015.6739103127748,\n          2016.0,\n          0.7388183191830495\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"YearEnd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24730.646227064524,\n        \"min\": 0.7388183191830495,\n        \"max\": 71649.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2016.6739103127748,\n          2017.0,\n          0.7388183191830495\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Data_Value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11712.89458089307,\n        \"min\": 0.0,\n        \"max\": 33154.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          19.5856144055016,\n          3.2,\n          33154.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low_Confidence_Limit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11713.502688100027,\n        \"min\": 0.0,\n        \"max\": 33154.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          17.347587923025877,\n          2.18,\n          33154.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High_Confidence_Limit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11712.220469174945,\n        \"min\": 0.0,\n        \"max\": 33154.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          22.136642034143694,\n          4.93,\n          33154.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Numerator\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sample_Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28323.983566892377,\n        \"min\": 30.0,\n        \"max\": 70332.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2463.3804006758387\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LocationID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25313.875601775064,\n        \"min\": 0.0,\n        \"max\": 71649.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          71649.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DataValueTypeID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GeoLocation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Geographic Level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "list(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OmiPKQf5NvNS",
        "outputId": "907965e1-0c31-4dca-d573-50d7c44aca45"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['YearStart',\n",
              " 'YearEnd',\n",
              " 'LocationAbbr',\n",
              " 'LocationDesc',\n",
              " 'DataSource',\n",
              " 'Topic',\n",
              " 'Category',\n",
              " 'Question',\n",
              " 'Response',\n",
              " 'Age',\n",
              " 'Gender',\n",
              " 'RaceEthnicity',\n",
              " 'RiskFactor',\n",
              " 'RiskFactorResponse',\n",
              " 'Data_Value_Unit',\n",
              " 'Data_Value_Type',\n",
              " 'Data_Value',\n",
              " 'Data_Value_Footnote_Symbol',\n",
              " 'Data_Value_Footnote',\n",
              " 'Low_Confidence_Limit',\n",
              " 'High_Confidence_Limit',\n",
              " 'Numerator',\n",
              " 'Sample_Size',\n",
              " 'LocationID',\n",
              " 'TopicID',\n",
              " 'CategoryID',\n",
              " 'QuestionID',\n",
              " 'ResponseID',\n",
              " 'DataValueTypeID',\n",
              " 'AgeID',\n",
              " 'GenderID',\n",
              " 'RaceEthnicityID',\n",
              " 'RiskFactorID',\n",
              " 'RiskFactorResponseID',\n",
              " 'GeoLocation',\n",
              " 'Geographic Level']"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data[\"Data_Value\"].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9x4U6JlEPYGO",
        "outputId": "b8e4094a-1c0f-4c48-efc4-66bc7f2b5b73"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([  nan, 16.63, 18.75, ..., 98.72, 97.62, 95.46])"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dTyX8-acQpxV",
        "outputId": "118be606-ec03-48bb-ad0c-f44a7c1f6f8e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 71649 entries, 0 to 71648\n",
            "Data columns (total 36 columns):\n",
            " #   Column                      Non-Null Count  Dtype  \n",
            "---  ------                      --------------  -----  \n",
            " 0   YearStart                   71649 non-null  int64  \n",
            " 1   YearEnd                     71649 non-null  int64  \n",
            " 2   LocationAbbr                71649 non-null  object \n",
            " 3   LocationDesc                71649 non-null  object \n",
            " 4   DataSource                  71649 non-null  object \n",
            " 5   Topic                       71649 non-null  object \n",
            " 6   Category                    71649 non-null  object \n",
            " 7   Question                    71649 non-null  object \n",
            " 8   Response                    71649 non-null  object \n",
            " 9   Age                         71649 non-null  object \n",
            " 10  Gender                      71649 non-null  object \n",
            " 11  RaceEthnicity               71649 non-null  object \n",
            " 12  RiskFactor                  71649 non-null  object \n",
            " 13  RiskFactorResponse          71649 non-null  object \n",
            " 14  Data_Value_Unit             71649 non-null  object \n",
            " 15  Data_Value_Type             71649 non-null  object \n",
            " 16  Data_Value                  33154 non-null  float64\n",
            " 17  Data_Value_Footnote_Symbol  38495 non-null  object \n",
            " 18  Data_Value_Footnote         38495 non-null  object \n",
            " 19  Low_Confidence_Limit        33154 non-null  float64\n",
            " 20  High_Confidence_Limit       33154 non-null  float64\n",
            " 21  Numerator                   0 non-null      float64\n",
            " 22  Sample_Size                 53859 non-null  float64\n",
            " 23  LocationID                  71649 non-null  int64  \n",
            " 24  TopicID                     71649 non-null  object \n",
            " 25  CategoryID                  71649 non-null  object \n",
            " 26  QuestionID                  71649 non-null  object \n",
            " 27  ResponseID                  71649 non-null  object \n",
            " 28  DataValueTypeID             0 non-null      float64\n",
            " 29  AgeID                       71649 non-null  object \n",
            " 30  GenderID                    71649 non-null  object \n",
            " 31  RaceEthnicityID             71649 non-null  object \n",
            " 32  RiskFactorID                71649 non-null  object \n",
            " 33  RiskFactorResponseID        71649 non-null  object \n",
            " 34  GeoLocation                 0 non-null      float64\n",
            " 35  Geographic Level            0 non-null      float64\n",
            "dtypes: float64(8), int64(3), object(25)\n",
            "memory usage: 19.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.groupby([\"Age\"]).count()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 592
        },
        "id": "ARUjl_vDQ1rb",
        "outputId": "88318b99-17b4-4f61-b66b-36a89077d48f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    YearStart  YearEnd  LocationAbbr  LocationDesc  \\\n",
              "Age                                                                  \n",
              "0-17 years                273      273           273           273   \n",
              "18 years and older      12033    12033         12033         12033   \n",
              "18-39 years             14313    14313         14313         14313   \n",
              "40-64 years             14313    14313         14313         14313   \n",
              "65-84 years             14313    14313         14313         14313   \n",
              "85 years and older      13884    13884         13884         13884   \n",
              "All ages                 2520     2520          2520          2520   \n",
              "\n",
              "                    DataSource  Topic  Category  Question  Response  Gender  \\\n",
              "Age                                                                           \n",
              "0-17 years                 273    273       273       273       273     273   \n",
              "18 years and older       12033  12033     12033     12033     12033   12033   \n",
              "18-39 years              14313  14313     14313     14313     14313   14313   \n",
              "40-64 years              14313  14313     14313     14313     14313   14313   \n",
              "65-84 years              14313  14313     14313     14313     14313   14313   \n",
              "85 years and older       13884  13884     13884     13884     13884   13884   \n",
              "All ages                  2520   2520      2520      2520      2520    2520   \n",
              "\n",
              "                    ...  QuestionID  ResponseID  DataValueTypeID  AgeID  \\\n",
              "Age                 ...                                                   \n",
              "0-17 years          ...         273         273                0    273   \n",
              "18 years and older  ...       12033       12033                0  12033   \n",
              "18-39 years         ...       14313       14313                0  14313   \n",
              "40-64 years         ...       14313       14313                0  14313   \n",
              "65-84 years         ...       14313       14313                0  14313   \n",
              "85 years and older  ...       13884       13884                0  13884   \n",
              "All ages            ...        2520        2520                0   2520   \n",
              "\n",
              "                    GenderID  RaceEthnicityID  RiskFactorID  \\\n",
              "Age                                                           \n",
              "0-17 years               273              273           273   \n",
              "18 years and older     12033            12033         12033   \n",
              "18-39 years            14313            14313         14313   \n",
              "40-64 years            14313            14313         14313   \n",
              "65-84 years            14313            14313         14313   \n",
              "85 years and older     13884            13884         13884   \n",
              "All ages                2520             2520          2520   \n",
              "\n",
              "                    RiskFactorResponseID  GeoLocation  Geographic Level  \n",
              "Age                                                                      \n",
              "0-17 years                           273            0                 0  \n",
              "18 years and older                 12033            0                 0  \n",
              "18-39 years                        14313            0                 0  \n",
              "40-64 years                        14313            0                 0  \n",
              "65-84 years                        14313            0                 0  \n",
              "85 years and older                 13884            0                 0  \n",
              "All ages                            2520            0                 0  \n",
              "\n",
              "[7 rows x 35 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5c61821c-e84b-4334-b0cc-9fadc2cfb774\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearStart</th>\n",
              "      <th>YearEnd</th>\n",
              "      <th>LocationAbbr</th>\n",
              "      <th>LocationDesc</th>\n",
              "      <th>DataSource</th>\n",
              "      <th>Topic</th>\n",
              "      <th>Category</th>\n",
              "      <th>Question</th>\n",
              "      <th>Response</th>\n",
              "      <th>Gender</th>\n",
              "      <th>...</th>\n",
              "      <th>QuestionID</th>\n",
              "      <th>ResponseID</th>\n",
              "      <th>DataValueTypeID</th>\n",
              "      <th>AgeID</th>\n",
              "      <th>GenderID</th>\n",
              "      <th>RaceEthnicityID</th>\n",
              "      <th>RiskFactorID</th>\n",
              "      <th>RiskFactorResponseID</th>\n",
              "      <th>GeoLocation</th>\n",
              "      <th>Geographic Level</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Age</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0-17 years</th>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>...</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18 years and older</th>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>...</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>0</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>12033</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18-39 years</th>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>...</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>0</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40-64 years</th>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>...</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>0</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65-84 years</th>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>...</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>0</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>14313</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85 years and older</th>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>...</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>0</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>13884</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>All ages</th>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>...</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>0</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>2520</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7 rows × 35 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c61821c-e84b-4334-b0cc-9fadc2cfb774')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5c61821c-e84b-4334-b0cc-9fadc2cfb774 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5c61821c-e84b-4334-b0cc-9fadc2cfb774');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-345f7298-403a-4102-82a3-7d4c312d4519\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-345f7298-403a-4102-82a3-7d4c312d4519')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-345f7298-403a-4102-82a3-7d4c312d4519 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data[\"Gender\"].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v3JqVKNwRGjw",
        "outputId": "0a85a315-e189-4880-8bb4-46ba9d8a26b3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Female', 'Male', 'All genders'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    }
  ]
}